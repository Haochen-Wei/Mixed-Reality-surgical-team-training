import numpy as np

def reg_2d(line_set):
    #Construact the linear equtaion where Ax=B. A contain k abd B contain b
    line_set=np.array(line_set)
    x=line_set[:,0]
    A=np.vstack([-x, np.ones(len(x))]).T
    B=line_set[:,1]

    #Solve the crossing point using least square
    res=np.linalg.lstsq(A,B,rcond=None)[0]
    y=res[0]
    x=res[1]
    return [x,y]


# Testing data
# A=np.array([[-0.5937500000000003, 514.1250000000001], [-0.6206896551724138, 523.9655172413793], [-0.6233766233766233, 519.3116883116883], [-0.6538461538461536, 528.1923076923076], [-0.6478873239436619, 517.9577464788732], [-0.6470588235294117, 514.4117647058823], [-0.674698795180723, 516.0120481927711], [-0.7227722772277227, 524.4653465346535], [-0.7236842105263157, 521.6578947368421], [-0.7529411764705883, 516.0823529411765], [-0.8030303030303029, 524.060606060606], [-0.8395061728395063, 526.7901234567902], [-0.8727272727272727, 530.2727272727273], [-0.898550724637681, 523.0144927536231], [-0.9322033898305088, 526.5593220338984], [-0.9710144927536231, 528.7536231884058], [-1.0000000000000004, 527.0000000000001], [-0.882352941176471, 532.0000000000001], [-0.6296296296296297, 513.1481481481482], [-0.653846153846154, 529.7307692307693], [-0.6274509803921571, 531.1764705882354], [-0.5842696629213481, 522.3258426966291], [-0.5730337078651685, 523.1123595505618], [-0.5514018691588787, 525.0560747663552], [-0.5555555555555556, 528.8888888888889], [-0.5058823529411763, 517.6705882352941], [-0.5272727272727273, 526.7272727272727], [-0.5384615384615384, 531.9230769230769], [-0.5375000000000002, 530.6500000000001], [-0.5256410256410258, 525.3333333333334], [-0.5517241379310344, 533.7241379310344], [-0.5671641791044778, 536.8805970149255], [-0.5569620253164556, 531.8481012658227], [-0.5373134328358209, 524.2089552238806], [-0.5692307692307689, 528.553846153846], [-0.5555555555555552, 522.8888888888888], [-0.5765765765765765, 524.027027027027], [-0.6093750000000003, 525.8125000000001], [-0.5822784810126581, 512.6455696202531], [-0.6538461538461539, 517.5], [-0.6764705882352938, 519.735294117647], [-0.7289719626168226, 527.3271028037384], [-0.7169811320754715, 518.2264150943396], [-0.75, 524.25], [-0.7375, 517.5], [-0.7777777777777777, 528.6666666666666], [-0.8103448275862066, 528.1379310344827], [-0.8043478260869568, 522.0217391304349], [-0.8111111111111113, 521.8000000000001], [-0.7804878048780487, 512.9024390243902], [-0.8461538461538457, 530.9230769230768], [-0.8148148148148148, 521.5555555555555], [-0.846153846153846, 531.7692307692307], [-0.803030303030303, 518.4090909090909], [-0.796875, 517.671875], [-0.8072289156626508, 519.6144578313254], [-0.8148148148148148, 524.0], [-0.8117647058823529, 525.3882352941176], [-0.7647058823529409, 524.1176470588234], [-0.7592592592592596, 527.7407407407409], [-0.6964285714285716, 510.1428571428572], [-0.701754385964912, 515.1228070175438], [-0.6785714285714286, 513.6785714285714], [-0.7068965517241376, 525.5172413793102], [-0.6862745098039211, 521.1568627450979], [-0.7377049180327873, 527.5573770491804], [-0.6935483870967742, 511.90322580645164], [-0.7058823529411764, 515.5294117647059], [-0.7, 513.4], [-0.7000000000000004, 512.6000000000001], [-0.7058823529411764, 515.6470588235294], [-0.701754385964912, 515.3333333333333], [-0.6981132075471695, 514.0188679245282], [-0.7169811320754721, 510.5283018867926], [-0.7500000000000003, 516.0000000000001], [-0.7540983606557377, 514.2622950819672], [-0.8113207547169811, 530.2830188679245], [-0.75, 509.25], [-0.78, 517.36], [-0.8113207547169816, 527.1320754716983], [-0.8113207547169816, 527.1320754716983], [-0.7924528301886795, 520.245283018868], [-0.8113207547169816, 528.1320754716983], [-0.8000000000000002, 528.2], [-0.7777777777777773, 514.6666666666665], [-0.78, 514.36], [-0.7843137254901964, 512.3529411764707], [-0.7843137254901963, 511.35294117647067], [-0.8148148148148152, 517.7777777777779], [-0.8235294117647061, 519.9411764705883], [-0.8133333333333329, 514.4266666666665], [-0.8474576271186441, 520.5932203389831], [-0.8524590163934429, 522.3278688524591], [-0.8472222222222219, 518.611111111111], [-0.8333333333333334, 512.0], [-0.9035087719298247, 527.7456140350878], [-0.934426229508197, 532.4918032786886], [-0.9393939393939392, 531.9393939393939], [-0.9999999999999997, 544.9999999999999], [-1.0, 542.0]])
# print(reg_2d(A))